[project]
name = "test-agents"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
	"langchain>=0.3.20",
	"langchain-experimental>=0.3.4",
	"langchain-groq>=0.2.4",
	"langchain-openai>=0.3.7",
	"langgraph>=0.3.5",
]


[dependency-groups]
dev = [
	"pytest>=7.2.0",
	"pre-commit>=2.20.0",
	"tox-uv>=1.11.3",
	"mypy>=0.991",
	"pytest-cov>=4.0.0",
	"ruff>=0.9.2"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/foo"]

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-data]
"scr" = ["*"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.deptry]
extend_exclude = [
	".+/test_foo.py"
]

[tool.deptry.per_rule_ignores]
DEP002 = ["src"]

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
	# flake8-2020
	"YTT",
	# flake8-bandit
	"S",
	# flake8-bugbear
	"B",
	# flake8-builtins
	"A",
	# flake8-comprehensions
	"C4",
	# flake8-debugger
	"T10",
	# flake8-simplify
	"SIM",
	# isort
	"I",
	# mccabe
	"C90",
	# pycodestyle
	"E", "W",
	# pyflakes
	"F",
	# pygrep-hooks
	"PGH",
	# pyupgrade
	"UP",
	# ruff
	"RUF",
	# tryceratops
	"TRY",
]
ignore = [
	# LineTooLong
	"E501",
	# DoNotAssignLambda
	"E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]